# Generated by Django 3.1.3 on 2021-01-31 19:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LandingPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.TextField()),
                ('company_tagline', models.TextField()),
                ('hero_image_unsplash', models.TextField()),
                ('hero_image_upload', models.ImageField(upload_to='images/')),
                ('phone_number', models.IntegerField()),
                ('license_number', models.IntegerField()),
                ('insured_attribute', models.BooleanField()),
                ('bonded_attribute', models.BooleanField()),
                ('emergency_services_attribute', models.BooleanField()),
                ('veteran_attribute', models.BooleanField()),
                ('family_owned_attribute', models.BooleanField()),
                ('years_in_business_attribute', models.IntegerField()),
                ('about_us', models.URLField(blank=True, null=True)),
                ('about_us_image', models.ImageField(upload_to='')),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('testimonial_hero', models.ImageField(upload_to='images/')),
                ('featured_video', models.URLField(blank=True, null=True)),
                ('address', models.TextField()),
                ('business_hours', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=7)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestimonialPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testimonial_photo', models.ImageField(upload_to='images/')),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing_page_gen.landingpage')),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testimonial_giver_name', models.TextField()),
                ('testimonial_giver_title', models.TextField(blank=True, null=True)),
                ('testimonial_giver_rating', models.TextField()),
                ('testimonial_description', models.TextField(blank=True, null=True)),
                ('testimonial_source', models.ImageField(upload_to='images/')),
                ('testimonial_date', models.DateField(blank=True, null=True)),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing_page_gen.landingpage')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('services_tagline', models.TextField()),
                ('services_title', models.TextField()),
                ('services_description', models.TextField()),
                ('services_icon', models.TextField()),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing_page_gen.landingpage')),
            ],
        ),
        migrations.CreateModel(
            name='GalleryPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_photo', models.ImageField(upload_to='images/')),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing_page_gen.landingpage')),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('landing_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing_page_gen.landingpage')),
            ],
        ),
    ]
